{"version":3,"sources":["Components/table.js","Components/SimpleCrudApplication/data.js","Components/SimpleCrudApplication/studentList.js","Components/SimpleCrudApplication/student.js","Components/routing/Advanced.js","Components/Drawer.js","App.js","serviceWorker.js","index.js"],"names":["Data","id","name","stuClass","batch","rollno","phone","Table","useState","data","setData","title","columns","field","editable","onRowAdd","newRow","Promise","resolve","reject","updatedRows","Math","floor","random","setTimeout","onRowDelete","selectedRow","index","tableData","splice","onRowUpdate","updatedRow","oldRow","options","actionsColumnIndex","addRowPosition","exportButton","stuclass","useStyles","makeStyles","theme","button","margin","spacing","StudentList","Student","deleteHandler","updateHandler","classes","className","Button","variant","color","size","startIcon","onClick","root","width","paper","padding","textAlign","palette","text","secondary","students","setStudent","message","setMessage","updatedIndex","setupdateIndex","flag","setFlag","setName","setstuClass","setBatch","setRollno","newStudents","filter","student","i","console","log","noValidate","autoComplete","TextField","label","value","onChange","e","target","updatedStudent","map","stu","style","backgroundColor","item","Advanced","drawerWidth","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","flexGrow","MiniDrawer","useTheme","React","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Drawer","direction","Divider","List","component","ListItem","ListItemIcon","to","ListItemText","disableTypography","SideBarFont","primary","paragraph","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.6c52b422.chunk.js","sourcesContent":["\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport '../App.css';\r\nimport MaterialTable from 'material-table'\r\n\r\n\r\nconst Data = [\r\n    {id: 1 , name: \"Muhammad Ahsan\" , stuClass : \"BSCS\" , batch: \"FA19\" , rollno: 99  , phone : +923056496364} ,\r\n    {id: 2 , name: \"Ahmed Sajjad\" , stuClass : \"BSCS\" , batch: \"FA19\" , rollno: 44  , phone : +923013656698} ,\r\n    {id: 3 , name: \"Subhan Tariq\" , stuClass : \"BSCS\" , batch: \"FA19\" , rollno: 102  , phone : +923013003298} ,\r\n    {id: 4 , name: \"Bilal AShraf\" , stuClass : \"BSCS\" , batch: \"FA19\" , rollno: 101  , phone : +923059900695} ,\r\n    {id: 5 , name: \"Hammad Ali Mujahid\" , stuClass : \"BSCS\" , batch: \"FA19\" , rollno: 78  , phone : +923026689292} ,\r\n    {id: 1 , name: \"Muhammad Usman\" , stuClass : \"BSCS\" , batch: \"FA19\" , rollno: 73  , phone : +923040672375} ,\r\n\r\n\r\n]\r\n\r\nfunction Table() {\r\n\r\n  const [data, setData] = useState(Data)\r\n  const columns = [\r\n    { title: \"ID\", field: \"id\", editable: false },\r\n    { title: \"Name\", field: \"name\" },\r\n    {title: \"Class\" , field: \"stuClass\"} ,\r\n    {title: \"Batch\" , field: \"batch\"},\r\n    {title: \"Roll No\" , field:\"rollno\"} ,\r\n    {title: \"Phone \" , field : \"phone\"},\r\n   \r\n  ]\r\n\r\n\r\n  return (\r\n    <div >\r\n     \r\n      <MaterialTable\r\n        title=\"Student Record\"\r\n        data={data}\r\n        columns={columns}\r\n        editable={{\r\n          onRowAdd: (newRow) => new Promise((resolve, reject) => {\r\n            const updatedRows = [...data, { id: Math.floor(Math.random() * 100), ...newRow }]\r\n            setTimeout(() => {\r\n              setData(updatedRows)\r\n              resolve()\r\n            }, 2000)\r\n          }),\r\n          onRowDelete: selectedRow => new Promise((resolve, reject) => {\r\n            const index = selectedRow.tableData.id;\r\n            const updatedRows = [...data]\r\n            updatedRows.splice(index, 1)\r\n            setTimeout(() => {\r\n              setData(updatedRows)\r\n              resolve()\r\n            }, 2000)\r\n          }),\r\n          onRowUpdate:(updatedRow,oldRow)=>new Promise((resolve,reject)=>{\r\n            const index=oldRow.tableData.id;\r\n            const updatedRows=[...data]\r\n            updatedRows[index]=updatedRow\r\n            setTimeout(() => {\r\n              setData(updatedRows)\r\n              resolve()\r\n            }, 2000)\r\n          })\r\n\r\n        }}\r\n        options={{\r\n          actionsColumnIndex: -1, \r\n          addRowPosition: \"first\",\r\n          exportButton: true,\r\n\r\n        }}\r\n     \r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","\r\n\r\nexport const data =  [\r\n    {\r\n        id: 121,\r\n        name: 'Ahsan' ,\r\n        stuclass: 'BSCS' ,\r\n        batch: 'FA19' ,\r\n        rollno: 99 ,\r\n         \r\n    },\r\n    {\r\n        id: 122,\r\n        name: 'Ali' ,\r\n        stuclass: 'BSCS' ,\r\n        batch: 'FA19'  ,\r\n        rollno: 130 ,\r\n         \r\n    },\r\n    {\r\n        id: 123,\r\n        name: 'Ahmed' ,\r\n        stuclass: 'BSCS' ,\r\n        batch: 'FA19'  ,\r\n        rollno: 44 ,\r\n\r\n    },\r\n    {\r\n        id: 124,\r\n        name: 'Hammad',\r\n        stuclass: 'BSCS' ,\r\n        batch: 'FA19' ,\r\n        rollno: 78  ,\r\n\r\n    }\r\n    \r\n]\r\n","\r\nimport React, { useState } from 'react'\r\n\r\n// import 'style.css'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport UpdateIcon from '@material-ui/icons/Update'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction StudentList({ index, Student, deleteHandler, updateHandler }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <tr className=\"tableRow\">\r\n            <td  >{index + 1}</td>\r\n            <td>{Student.name}</td>\r\n            <td>{Student.stuclass}</td>\r\n            <td>{Student.batch}</td>\r\n            <td>{Student.rollno}</td>\r\n            <td>\r\n                {/* <button onClick={()=> deleteHandler(index)}>Delete</button> */}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={()=> deleteHandler(index)}\r\n                >\r\n                    Delete\r\n      </Button>\r\n            </td>\r\n            <td>\r\n                {/* <button onClick={() => updateHandler(Student, index)} >Update</button> */}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<UpdateIcon />}\r\n                    onClick={()=> updateHandler(Student , index)}\r\n                >\r\n                    Update\r\n                </Button>\r\n            </td>\r\n\r\n\r\n        </tr>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default StudentList;","import React, { useState } from \"react\";\r\n\r\nimport './style.css'\r\n\r\n\r\nimport { data } from './data'\r\nimport StudentList from './studentList';\r\n\r\n// import Input from './components/input'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport UpdateIcon from '@material-ui/icons/Update'\r\n\r\n\r\n\r\n\r\n// This is for TextField and Input Tags \r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n          },\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        }\r\n    },\r\n}));\r\n\r\n// This is styles for Buttons \r\n\r\n\r\n\r\nfunction Student() {\r\n    const classes = useStyles();\r\n    // const classes = useStyles();\r\n\r\n    const [students, setStudent] = useState(data);\r\n    const [message, setMessage] = useState(\"\")\r\n    const [updatedIndex , setupdateIndex] = useState(0)\r\n    const [flag , setFlag] = useState(false)\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [stuclass, setstuClass] = useState(\"\");\r\n    const [batch, setBatch] = useState(\"\");\r\n    const [rollno, setRollno] = useState(\"\");\r\n\r\n\r\n    // For Delete User \r\n    const deleteHandler = (index) => {\r\n\r\n        let newStudents = students.filter((student, i) => {\r\n            if (i !== index) {\r\n                return student;\r\n      \r\n            }\r\n        });\r\n\r\n        setStudent([...newStudents]);\r\n        console.log('All New Students:  ', newStudents);\r\n    };\r\n\r\n    // For ADD NEW User \r\n\r\n    const ctaHandler = ()=> {\r\n\r\n        setMessage(\"\")  \r\n        if( name !== \"\" && rollno !== \"\" && stuclass !== \"\" && batch !== \"\")\r\n        {  \r\n        let student = {\r\n        name ,\r\n        stuclass,\r\n        batch ,\r\n        rollno,\r\n\r\n        }\r\n\r\n        console.log('Student Data:  '  , student);\r\n        setStudent([...students , student])\r\n\r\n        setName(\"\")\r\n        setstuClass(\"\");\r\n        setBatch(\"\");\r\n        setRollno(\"\");\r\n        }\r\n\r\n        else\r\n        {\r\n            setMessage(\"Some Inputs are Empty\");\r\n        }\r\n\r\n    } \r\n\r\n    // For Update USer \r\n\r\n    const updateHandler = (Student , index)=> \r\n    {\r\n        console.log(\"Check for Update Student\" + Student);\r\n        setupdateIndex(index)\r\n        setName(Student.name)\r\n        setstuClass(Student.stuclass)\r\n        setBatch(Student.batch)\r\n        setRollno(Student.rollno)\r\n        setFlag(true)\r\n    }\r\n\r\n    const ctaupdateHandler = ()=> {\r\n        setMessage(\"\")  \r\n        if( name !== \"\" && rollno !== \"\" && stuclass !== \"\" && batch !== \"\")\r\n        {  \r\n        let student = {\r\n        name ,\r\n        rollno,\r\n        stuclass ,\r\n        batch\r\n\r\n        }\r\n\r\n        console.log('Student Data:  '  , student);\r\n\r\n        let updatedStudent = students.map((stu , index)=>{\r\n            if(updatedIndex === index)\r\n            {\r\n            return student\r\n            }\r\n            else\r\n            {\r\n            return stu\r\n            }\r\n\r\n        })\r\n\r\n        setStudent([...updatedStudent ])\r\n\r\n        setName(\"\")\r\n        setstuClass(\"\");\r\n        setBatch(\"\");\r\n        setRollno(\"\");\r\n        setFlag(false);\r\n    }\r\n\r\n        else\r\n        {\r\n            setMessage(\"Some Inputs are Empty\");\r\n        }\r\n\r\n    \r\n    \r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div  >\r\n\r\n\r\n            <br  />\r\n            <hr />\r\n            <h1 >Add New Student</h1>\r\n            <hr />\r\n\r\n            <div className={classes.root} noValidate autoComplete=\"off\"  >\r\n                \r\n                \r\n\r\n                <TextField id=\"standard-full-width\" label=\"Name\" value={name}  onChange={(e) => setName(e.target.value)} />\r\n                <br />\r\n                <TextField id=\"standard-full-width\" label=\"Class\" value={stuclass}  onChange={(e) => setstuClass(e.target.value)} />\r\n                <br />\r\n                <TextField id=\"standard-full-width\" label=\"Batch\" value={batch}   onChange={(e) => setBatch(e.target.value)} />\r\n                <br />\r\n                <TextField id=\"standard-full-width\" label=\"Roll No\" value={rollno}   onChange={(e) => setRollno(e.target.value)} />\r\n                <br  />\r\n                <br />\r\n\r\n                {\r\n                flag ? \r\n                // <button onClick={ctaupdateHandler}>Update</button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                    startIcon={<UpdateIcon />}\r\n                    onClick={ctaupdateHandler}\r\n                >\r\n                    Update\r\n                </Button>\r\n                :\r\n                // <button onClick={ctaHandler}>Submit</button>\r\n                \r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  onClick={ctaHandler}\r\n                >\r\n                  Submit\r\n                </Button>\r\n\r\n                }\r\n\r\n               \r\n\r\n            </div>\r\n\r\n            <p style={{backgroundColor:\"red\" , color: \"white\" }}> \r\n                    {message}\r\n                </p>\r\n\r\n\r\n            \r\n            <hr />\r\n            <h1>\r\n                List of All Students\r\n            </h1>\r\n            <hr />\r\n            <br />\r\n            <table className=\"tableHead\">\r\n                <tr className=\"tableRow\">\r\n                    <th > Sr No</th>\r\n                    <th >Name</th>\r\n                    <th >Class</th>\r\n                    <th > Batch</th>\r\n                    <th >Roll No</th>\r\n                    <th >Delete</th>\r\n                    <th >Update</th>\r\n\r\n                </tr>\r\n\r\n\r\n                {\r\n\r\n                    students.map((item, index) => {\r\n                        return <StudentList index={index} Student={item} deleteHandler={deleteHandler} updateHandler= {updateHandler} />\r\n                    }\r\n                    )\r\n                }\r\n\r\n\r\n            </table>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Student;","\r\n\r\n\r\n\r\n\r\nimport React , {useState} from 'react';\r\n\r\n\r\nfunction Advanced() \r\n{\r\nreturn (\r\n    <>\r\n    <h2>This is Advanced Component</h2>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Advanced;","\r\n// import React  from 'react';\r\n// import  React , {useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/DashboardSharp'\r\nimport UserIcon from '@material-ui/icons/GroupAddSharp'\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeopleSharp';\r\nimport PermissionsIcon from '@material-ui/icons/VpnKeySharp';\r\nimport NewsIcon from '@material-ui/icons/CasinoSharp';\r\nimport PagesIcon from '@material-ui/icons/FileCopySharp';\r\nimport MenusIcon from '@material-ui/icons/ListSharp';\r\nimport AdvancedIcon from '@material-ui/icons/SettingsSharp';\r\nimport LogoutIcon from '@material-ui/icons/ExitToAppSharp';\r\n\r\n\r\nimport Table from './table'\r\nimport Student from '../Components/SimpleCrudApplication/student';\r\nimport  React,{useState} from 'react';\r\n\r\n\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Dashboard from './routing/Dasbboard';\r\nimport User from './routing/User';\r\nimport Roles from './routing/Roles';\r\nimport Permissions from './routing/Permissions';\r\nimport News from './routing/News';\r\nimport Pages from './routing/Pages';\r\nimport Menu from './routing/Menu';\r\nimport Advanced from './routing/Advanced';\r\nimport Logout from './routing/Logout';\r\n\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 210;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n\r\n    <Router>\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            <strong>Crud Operations</strong>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\"  >\r\n        \r\n                    <ListItem button >\r\n                    \r\n                        <ListItemIcon  style={{color:\"#0000CD\"}}>\r\n                            <DashboardIcon />\r\n                        </ListItemIcon>\r\n                        <Link to=\"/Dashboard\">\r\n                        <ListItemText disableTypography className={classes.SideBarFont}  primary=\"Dashboard\" />\r\n                        </Link>\r\n                    </ListItem>\r\n        \r\n                    <ListItem button>\r\n                        <ListItemIcon style={{color:\"#0000CD\"}}>\r\n                            <UserIcon />\r\n                        </ListItemIcon>\r\n                        <Link to=\"/User\">\r\n                        <ListItemText disableTypography className={classes.SideBarFont}  primary=\"User\" />\r\n                        </Link>\r\n                    </ListItem>\r\n\r\n                    <ListItem button>\r\n                        <ListItemIcon style={{color:\"#0000CD\"}}>\r\n                            <EmojiPeopleIcon />\r\n                        </ListItemIcon>\r\n                        <Link to=\"/Roles\">\r\n                        <ListItemText disableTypography className={classes.SideBarFont}  primary=\"Roles\" />\r\n                        </Link>\r\n                    </ListItem>\r\n\r\n                    <ListItem  button>\r\n                        <ListItemIcon style={{color:\"#0000CD\"}}>\r\n                            <PermissionsIcon />\r\n                        </ListItemIcon>\r\n                        <Link to=\"/Permissions\">\r\n                        <ListItemText disableTypography className={classes.SideBarFont}  primary=\"Permissions\" />\r\n                        </Link>\r\n                     </ListItem>\r\n\r\n                    \r\n                    <ListItem  button>\r\n                        <ListItemIcon style={{color:\"#0000CD\"}}>\r\n                            <NewsIcon />\r\n                        </ListItemIcon>\r\n                        <Link to=\"/News\">\r\n                        <ListItemText disableTypography className={classes.SideBarFont}  primary=\"News\" />\r\n                        </Link>\r\n                    </ListItem>\r\n                    \r\n                    <ListItem  button>\r\n                        <ListItemIcon style={{color:\"#0000CD\"}}>\r\n                            <PagesIcon />\r\n                        </ListItemIcon>\r\n                          <Link to=\"/Pages\">\r\n                        <ListItemText disableTypography className={classes.SideBarFont}  primary=\"Pages\" />\r\n                         </Link>\r\n                    </ListItem>\r\n                    <ListItem  button>\r\n                        <ListItemIcon style={{color:\"#0000CD\"}}>\r\n                            <MenusIcon />\r\n                        </ListItemIcon>\r\n                        <Link to=\"/Menu\">\r\n                        <ListItemText disableTypography className={classes.SideBarFont}  primary=\"Menu\" />\r\n                        </Link>\r\n                    </ListItem>\r\n                    <ListItem  button>\r\n                        <ListItemIcon style={{color:\"#0000CD\"}}>\r\n                            <AdvancedIcon />\r\n                        </ListItemIcon>\r\n                        <Link to=\"/Advanced\">\r\n                        <ListItemText disableTypography className={classes.SideBarFont}  primary=\"Advanced\" />\r\n                        </Link>\r\n                    </ListItem>\r\n                    <ListItem  >\r\n                        <ListItemIcon >\r\n                            \r\n                        </ListItemIcon>\r\n\r\n                        <ListItemText disableTypography className={classes.SideBarFont}  primary=\"\" />\r\n                    </ListItem>\r\n                    <ListItem  >\r\n                        <ListItemIcon>\r\n                            \r\n                        </ListItemIcon>\r\n\r\n                        <ListItemText disableTypography className={classes.SideBarFont}  primary=\"\" />\r\n                    </ListItem>\r\n                    <ListItem  >\r\n                        <ListItemIcon>\r\n                            \r\n                        </ListItemIcon>\r\n\r\n                        <ListItemText disableTypography className={classes.SideBarFont}  primary=\"\" />\r\n                    </ListItem>\r\n                    <ListItem  >\r\n                        <ListItemIcon>\r\n                            \r\n                        </ListItemIcon>\r\n\r\n                        <ListItemText disableTypography className={classes.SideBarFont}  primary=\"\" />\r\n                    </ListItem>\r\n                \r\n                </List>\r\n                \r\n                \r\n          \r\n        <Divider />\r\n        <List button>\r\n        <Link to=\"/Logout\">\r\n                    <ListItem button>\r\n                        <ListItemIcon style={{color:\"#0000CD\"}}>\r\n                            <LogoutIcon />\r\n                        </ListItemIcon>\r\n                        \r\n                        <ListItemText disableTypography className={classes.SideBarFont} primary=\"Logout\" />\r\n                       \r\n                    </ListItem>\r\n          </Link>           \r\n         </List>\r\n\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Typography paragraph>\r\n            < Table/>\r\n        </Typography>\r\n\r\n        <Typography paragraph>\r\n            < Student/>\r\n        </Typography>\r\n        \r\n      </main>\r\n\r\n      <Switch>\r\n          <Route path=\"/Dashboard\">\r\n            <Dashboard />\r\n          </Route >\r\n          <Route path=\"/User\">\r\n            <User />\r\n          </Route>\r\n          <Route path=\"/Roles\">\r\n            <Roles />\r\n          </Route>\r\n          <Route path=\"/Permissions\">\r\n            <Permissions />\r\n          </Route>\r\n          <Route path=\"/News\">\r\n            <News />\r\n          </Route>\r\n          <Route path=\"/Pages\">\r\n            <Pages />\r\n          </Route>\r\n          <Route path=\"/Menu\">\r\n            <Menu />\r\n          </Route>\r\n          <Route path=\"/Advanced\">\r\n            <Advanced />\r\n          </Route>\r\n          <Route path=\"/Logout\">\r\n            <Logout />\r\n          </Route>\r\n\r\n          \r\n        </Switch>\r\n\r\n    </div>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\nimport './App.css';\n// import MaterialTable from 'material-table'\nimport MiniDrawer from \"./Components/Drawer\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n}\n  from 'react-router-dom';\nimport Dashboard from './Components/routing/Dasbboard';\nimport User from './Components/routing/User';\nimport Roles from './Components/routing/Roles';\nimport Permissions from './Components/routing/Permissions';\nimport News from './Components/routing/News';\nimport Pages from './Components/routing/Pages';\nimport Menu from './Components/routing/Menu';\nimport Advanced from './Components/routing/Advanced';\nimport Logout from './Components/routing/Logout';\n\n\nfunction App() {\n\n  return (\n    <>\n        < MiniDrawer  />  \n      \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}